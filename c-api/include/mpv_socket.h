#ifndef MPV_SOCKET_H
#define MPV_SOCKET_H

/* Generated with cbindgen:0.19.0 */

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdint.h>
#include <stddef.h>

typedef struct mpv_socket mpv_socket;

typedef struct mpv_socket_error mpv_socket_error;

typedef struct mpv_socket_connect_result {
  struct mpv_socket_error *error;
  struct mpv_socket *socket;
} mpv_socket_connect_result;

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

/**
 * Returns a static (null terminated) string of the mpv-socket version.
 */
const char *mpv_socket_version(void);

struct mpv_socket_connect_result mpv_socket_connect(const char *path);

/**
 * Frees a `mpv_socket`.
 */
void mpv_socket_free(struct mpv_socket *socket);

struct mpv_socket_error *mpv_socket_observe_property_f64(struct mpv_socket *socket,
                                                         const char *property,
                                                         void (*callback)(double, void*),
                                                         void *context);

/**
 * Frees a `mpv_socket_error`.
 */
void mpv_socket_error_free(struct mpv_socket_error *err);

/**
 * Print the details of this error to a buffer.
 *
 * The `dst_len` value must be the maximum length that the buffer can
 * store.
 *
 * The return value is number of bytes that were written to `dst`.
 */
size_t mpv_socket_error_print(const struct mpv_socket_error *err, uint8_t *dst, size_t dst_len);

#ifdef __cplusplus
} // extern "C"
#endif // __cplusplus

#endif /* MPV_SOCKET_H */
